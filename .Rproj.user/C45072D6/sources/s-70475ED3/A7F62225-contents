---
title: "Generate_datasets"
author: "Max"
date: "27 jan 2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(dplyr)
library(mice)
library(impute)
library(lme4)
library(cluster)
library(ggplot2)
library(miceadds)
library(micemd)

nClusters <- c(25)
#sizeCluster <- 25
sigma2 <- 1
beta0 <- 1
beta <- 1
tau <- 1
tau0 <- c(3)

alpha <- 0.9
knn <- 10
n  <- 25*25 - 1

SD <- c(12, 25, 50)


prop_miss <- c(0.3)
amp_method <- "MCAR"
clust_var <- "clust"       

nIter <- 20
nSim <- 100
nAmpute <- 5 
nRuns <- 5 

sink("logfile_unbalanced_rmse.txt")
cat("SD;nClust;tau;miss;iter;iter_amp;method;RMSE;MAE;ACC")
cat("\n")


for(nClust in nClusters){
  for(t in tau0){
    for(miss in prop_miss){
      for(sd in SD){
        for(i in 1:nSim){
          
          df_obs <- create.unbalanced.data(nClusters, sd, beta0_orig, tau0_orig, beta1_orig, tau1_orig, sigma2)
          
          #df_obs <- create.data(nClust, sizeCluster, beta0, t, beta, tau, sigma2)
          df_name <- paste0("N", nClust, "_T", t, "_M", miss, "_Iter",  i, ".csv")
          #write.csv(df_obs, file = df_name)
          
          for(j in 1:nAmpute){
            df_obs <- normalize(df_obs)
            clust_var <- df_obs$clust
            df_obs$clust <- NULL
            df_amp <- ampute(df_obs, prop = prop_miss, mech = amp_method)
            df_miss <- df_amp$amp 
            df_miss$clust <- clust_var 
            df_miss <- df_miss %>% select(clust, everything())
            df_obs <- df_obs %>% mutate(clust = clust_var) %>% select(clust, everything())
            
            #dm_name <- paste0("N", nClust, "_T", t, "_M", miss, "_Iter",  i, "_AMP", j, ".csv")
            #write.csv(df_miss, file = dm_name)
            methods <- c("2l.norm", "2l.lmer", "2l.pan", "2l.jomo", "2lonly.mean")
            
            for(meth in methods){
              result <- get.results.benchmark(df_obs, df_miss, meth)  
              cat(paste0(sd, ";", nClust, ";", t, ";", miss, ";",i, ";", j, ";", meth, ";",
                         result[1], ";", result[2], ";", result[3]))
              cat("\n")
            }
            
            result_all <- get.results.all(df_obs, df_miss, nIter, alpha, knn)
            
            method2 <- c("mean", "pmm", "knn", "multi.imp")
            k <- 1
            for(meth in method2){
              cat(paste0(sd, ";", nClust, ";", t, ";", miss, ";",i, ";", j, ";", meth, ";",
                         result_all[k, 1], ";", result_all[k, 2], ";", result_all[k, 3]))
              cat("\n")
              
              k <- k + 1
            }
            
            
            
            
          }
        }
      }
    }
  }
}

sink()


get.results.benchmark <- function(df, df_miss, meth){
  
  indx_miss <-  get.index.miss(df_miss)
  imp <- impute_2l(df_miss, meth)  
  rm <- get.RMSE(df, imp,indx_miss)
  ma <-  get.MAE(df, imp, indx_miss)
  acc <- get.Accuracy.clust(df, imp, indx_miss)
  res_multi <- c(rm, ma, acc)
  res_multi
  
}

impute_2l <- function(df_miss, method){
  d <- df_miss
  d[[1]] <- as.numeric(factor(d[[1]]))
  pred <- make.predictorMatrix.multi(d) 
  meth <- get.methods.2l(method, df_miss)
  imp <- complete(mice(d, pred = pred, meth = meth, print = FALSE))
  imp
}

get.results.all <- function(df, df_miss, nIter, alpha, k){
  all <- c()
  indx_miss <-  get.index.miss(df_miss)
  

    imp <- impute.benchmark(df_miss, "mean")
  rm <- get.RMSE(df, imp,indx_miss)
  ma <-  get.MAE(df, imp, indx_miss)
  acc <- get.Accuracy.clust(df, imp, indx_miss)
  all <- rbind(all, c(rm, ma, acc))
  
    imp <- impute.benchmark(df_miss, "pmm")
  rm <- get.RMSE(df, imp,indx_miss)
  ma <-  get.MAE(df, imp, indx_miss)
  acc <- get.Accuracy.clust(df, imp, indx_miss)
  all <- rbind(all, c(rm, ma, acc))
  
      imp <- impute_knn(df_miss, k)
  rm <- get.RMSE(df, imp,indx_miss)
  ma <-  get.MAE(df, imp, indx_miss)
  acc <- get.Accuracy.clust(df, imp, indx_miss)
  all <- rbind(all, c(rm, ma, acc))
  
  
  imp <- impute.multilevel.num(df_miss, nIter, alpha, k)
  rm <- get.RMSE(df, imp,indx_miss)
  ma <-  get.MAE(df, imp, indx_miss)
  acc <- get.Accuracy.clust(df, imp, indx_miss)
  all <- rbind(all, c(rm, ma, acc))
  
  all
  
}




```

