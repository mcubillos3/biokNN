df_obs$adviser <- NULL
df_miss <- ampute(df_obs, prop = 0.2, mech = "MCAR")$amp
df_miss$adviser <- clust_var
df_miss <- df_miss %>% select(adviser, everything())
df_obs <- df_obs %>% mutate(adviser = clust_var) %>% select(adviser, everything())
df_miss[1:10, ]
set.seed(123456)
(calibrate(df_miss,
prop_valid = 0.2, print = TRUE))
(calibrate(df_miss,
prop_valid = 0.3, print = TRUE))
set.seed(123456)
(calibrate(df_miss,
prop_valid = 0.3,
weight_space = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1),
k_space = c(15),
print = TRUE))
set.seed(12345)
(calibrate(df_miss,
prop_valid = 0.3,
weight_space = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1),
k_space = c(10),
print = TRUE))
set.seed(12345)
(calibrate(df_miss,
prop_valid = 0.3,
weight_space = c(0.85, 0.88, 0.95, 0.98),
k_space = c(10),
print = TRUE))
set.seed(12345)
(calibrate(df_miss,
prop_valid = 0.3,
weight_space = c(0.85, 0.87, 0.92, 0.95),
k_space = c(10),
print = TRUE))
library(knitr)
tab <- read.csv2(file = "biokNN_files/table_overall_functions.csv")
View(tab)
View(tab)
library(biokNN)
library(dplyr)
library(tidyr)
library(ggplot2)
library(mice)
library(knitr)
machine <- read.csv(
url("https://archive.ics.uci.edu/
ml/machine-learning-databases/cpu-performance/machine.data"),
header=TRUE) %>% select(-2)
machine <- read.csv(
url("https://archive.ics.uci.edu/ml/machine-learning-databases/cpu-performance/machine.data"),
header=TRUE) %>% select(-2)
machine[1:10, ]
set.seed(12345)
df_obs <- machine
clust_var <- df_obs$adviser
df_obs$adviser <- NULL
df_miss <- ampute(df_obs, prop = 0.2, mech = "MCAR")$amp
df_miss$adviser <- clust_var
df_miss <- df_miss %>% select(adviser, everything())
df_obs <- df_obs %>% mutate(adviser = clust_var) %>% select(adviser, everything())
df_miss[1:10, ]
set.seed(12345)
df <- create.multilevel(nClass = 20, nVars = 1,
classMean = 20, classSD = 0,
beta0 = 0, tau0 = 3,
beta = c(1), tau = c(1),
sigma2 = 1)
df[1:10, ]
set.seed(12345)
df_obs <- df
clust_var <- df_obs$class
df_obs$class <- NULL
df_miss <- ampute(df_obs, prop = 0.2, mech = "MCAR")$amp
df_miss$class <- clust_var
df_miss <- df_miss %>% select(class, everything())
df_obs <- df_obs %>% mutate(class = clust_var) %>% select(class, everything())
df_miss[1:10, ]
df_imp_mi <- biokNN.impute.mi(df_miss,
className =  'class',
m = 3)
str(df_imp_mi)
est3 <- nhanes %>%
mice(seed = 123, print = FALSE) %>%
mice::complete("all")
est3 <- nhanes %>%
mice(seed = 123, print = FALSE) %>%
mice::complete("all") %>%
lapply(lm, formula = chl ~ age + bmi + hyp)
est3 <- nhanes %>%
mice(seed = 123, print = FALSE) %>%
mice::complete("all") %>%
lapply(lm, formula = chl ~ age + bmi + hyp) %>%
pool()
View(est3)
View(est3)
library(lme4)
library(lme4)
est1 <-df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool()
df_imp_mi <- biokNN.impute.mi(df_miss,
className =  'class',
m = 5)
str(df_imp_mi)
est1 <-df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool()
set.seed(12345)
df <- create.multilevel(nClass = 30, nVars = 1,
classMean = 20, classSD = 0,
beta0 = 0, tau0 = 3,
beta = c(1), tau = c(1),
sigma2 = 1)
df[1:10, ]
set.seed(12345)
df_obs <- df
clust_var <- df_obs$class
df_obs$class <- NULL
df_miss <- ampute(df_obs, prop = 0.2, mech = "MCAR")$amp
df_miss$class <- clust_var
df_miss <- df_miss %>% select(class, everything())
df_obs <- df_obs %>% mutate(class = clust_var) %>% select(class, everything())
df_miss[1:10, ]
df_imp_mi <- biokNN.impute.mi(df_miss,
className =  'class',
m = 5)
est1 <-df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool()
df <- create.multilevel(nClass = 50, nVars = 1,
classMean = 20, classSD = 0,
beta0 = 0, tau0 = 3,
beta = c(1), tau = c(1),
sigma2 = 1)
df[1:10, ]
df_obs <- df
clust_var <- df_obs$class
df_obs$class <- NULL
df_miss <- ampute(df_obs, prop = 0.1, mech = "MCAR")$amp
df_miss$class <- clust_var
df_miss <- df_miss %>% select(class, everything())
df_obs <- df_obs %>% mutate(class = clust_var) %>% select(class, everything())
df_miss[1:10, ]
df_imp_mi <- biokNN.impute.mi(df_miss,
className =  'class',
m = 3)
est1 <-df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool()
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool() %>%
summary()
est1
df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
pool()
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class ))
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
rowMeans(sapply(estimates, FUN = function(x) unlist(ranef(x))))
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
rowMeans(sapply(, FUN = function(x) unlist(ranef(x))))
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class ))
rowMeans(sapply(est1, FUN = function(x) unlist(ranef(x))))
rowMeans(sapply(est1, FUN = fixef))
rowMeans(sapply(est1, FUN = function(x) unlist(ranef(x))))
install.packages("mitml")
library(mitml)
testEstimates(est1, var.comp=TRUE)
testEstimates(est1)
testEstimates(est1, var.comp=TRUE)
testEstimates(est1, extra.pars=TRUE)
(est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
testEstimates(extra.pars=TRUE))
(est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (1  | class )) %>%
testEstimates(extra.pars=TRUE))
df <- create.multilevel(nClass = 50, nVars = 1,
classMean = 20, classSD = 0,
beta0 = 0, tau0 = 2,
beta = c(1), tau = c(1),
sigma2 = 1)
set.seed(12345)
df_obs <- df
clust_var <- df_obs$class
df_obs$class <- NULL
df_miss <- ampute(df_obs, prop = 0.1, mech = "MCAR")$amp
df_miss$class <- clust_var
df_miss <- df_miss %>% select(class, everything())
df_obs <- df_obs %>% mutate(class = clust_var) %>% select(class, everything())
df_miss[1:10, ]
df_imp_mi <- biokNN.impute.mi(df_miss,
className =  'class',
m = 3)
(est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (1  | class )) %>%
testEstimates(extra.pars=TRUE))
(est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class )) %>%
testEstimates(extra.pars=TRUE))
est1 <- df_imp_mi %>%
lapply(lmer, formula = y ~ X + (X  | class ))
summary(pool(est1))
summary(mi::pool(est1))
summary(mi::pool(y ~ X + (X  | class ), df_imp_mi))
devtools::load_all()
devtools::document()
devtools::install()
?biokNN.impute
library(dplyr)
library(mice)
library(impute)
library(lme4)
library(cluster)
library(ggplot2)
library(miceadds)
library(micemd)
df_obs <- create.multilevel()
df_obs <- create.multilevel()
patt0 <- ampute(df_obs, prop = 0.3, mech = "MCAR")$patterns
patt1 <- patt0[-1,]
df_miss <- ampute(df_obs, patterns = patt1, prop = 0.3, mech = "MCAR")$amp
data-example <- ampute(df_obs, patterns = patt1, prop = 0.3, mech = "MCAR")$amp
data.example <- ampute(df_obs, patterns = patt1, prop = 0.3, mech = "MCAR")$amp
devtools::use_data(data.example)
library(devtools)
devtools::use_data(data.example)
usethis::use_data(data.example)
data("data.example")
View(data.example)
devtools::load_all()
devtools::document()
devtools::install()
?biokNN.impute
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
devtools::load_all()
devtools::document()
devtools::install()
?biokNN.impute
library(devtools)
check(cleanup = FALSE,manual = TRUE,path = getwd())
check(cleanup = FALSE,args = c('--no-examples'),manual = TRUE,path = getwd())
build_manual(path=getwd())
roxygenise();
devtools::load_all()
devtools::document()
devtools::install()
build_manual(path=getwd())
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
devtools::load_all()
devtools::document()
build_manual(path=getwd())
data(data.example)
complete.data <- biokNN.impute(data.example,
className = "class",
niter = 10,
weight = 0.9,
k = 15,
distance = "euclidean")
data(data.example)
complete.data <- biokNN.impute(data.example,
className = "class",
nIter = 10,
weight = 0.9,
k = 15,
distance = "euclidean")
data(data.example)
complete.data <- biokNN.impute(data.example,
className = "class",
nIter = 10,
weight = 0.9,
k = 15,
distance = "gower")
data(data.example)
complete.data.mi <- biokNN.impute.mi(data.example,
className = "class",
m = 3,
niter = 10,
weight = 0.9,
k = 15,
distance = "euclidean")
# View completed data sets
str(complete.data.mi)
data(data.example)
complete.data.mi <- biokNN.impute.mi(data.example,
className = "class",
m = 3,
nIter = 10,
weight = 0.9,
k = 15,
distance = "euclidean")
# View completed data sets
str(complete.data.mi)
library(lme4)
library(mitml)
model <- complete.data.mi %>%
lapply(lmer, formula = y ~ X + (X | class )) %>% testEstimates(extra.pars=TRUE))
library(lme4)
library(mitml)
model <- complete.data.mi %>%
lapply(lmer, formula = y ~ X + (X | class )) %>% testEstimates(extra.pars=TRUE)
model
data(data.example)
calibrate(data.example,
prop_valid = 0.3,
weight_space = c(0.5, 0.7, 0.9),
k_space = c(10, 15),
print = FALSE))
calibrate(data.example,
prop_valid = 0.3,
weight_space = c(0.5, 0.7, 0.9),
k_space = c(10, 15),
print = FALSE)
alibrate(data.example,
prop_valid = 0.3,
weight_space = c(0.5, 0.7, 0.9),
k_space = c(10, 15),
print = TRUE)
calibrate(data.example,
prop_valid = 0.3,
weight_space = c(0.5, 0.7, 0.9),
k_space = c(10, 15),
print = TRUE)
df <- create.multilevel(nClass = 20,
nVars = 1,
classMean = 10,
classSD = 2)
df
data(data.example)
missing.plot(data.example, "class")
data(data.example)
pattern.plot(data.example, "class")
data(data.example)
target.boxplot(data.example, y, "class")
ggplot(data.example %>% dplyr::drop_na(), aes(class, y)) +
geom_boxplot()+
theme_bw()
ggplot(data.example %>% tidyr::drop_na(), aes(class, y)) +
geom_boxplot()+
theme_bw()
roxygenise();
devtools::load_all()
devtools::document()
data(data.example)
target.boxplot(data.example, y, "class")
build_manual(path=getwd())
build(
pkg = "biokNN_0.1.0",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
build(
pkg = "biokNN",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
build(
pkg = "biokNN_0.1.0",
path = =getwd(),
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
build(
pkg = "biokNN_0.1.0",
path = getwd(),
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
getwd()
build(
pkg = "biokNN_0.1.0",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation/biokNN",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
usethis::build(
pkg = "biokNN_0.1.0",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation/biokNN",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
devtools::build(
pkg = "biokNN_0.1.0",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation/biokNN",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
devtools::build(
pkg = "biokNN_0.1.0",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
devtools::build(
pkg = "biokNN_0.1.0",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
devtools::build(binary=FALSE)
devtools::load_all()
devtools::document()
roxygenise();
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
devtools::load_all()
devtools::document()
devtools::install()
library(biokNN)
devtools::use_data_raw()
usethis::use_data_raw()
readRDS("data.example.rda")
readRDS("data-raw/data.example.rda")
library(mice)
df_obs <- create.multilevel()
patt0 <- mice::ampute(df_obs, prop = 0.3, mech = "MCAR")$patterns
patt1 <- patt0[-1,]
library(dplyr)
library(mice)
df_obs <- create.multilevel()
patt0 <- mice::ampute(df_obs, prop = 0.3, mech = "MCAR")$patterns
patt1 <- patt0[-1,]
data.example <- mice::ampute(df_obs, patterns = patt1, prop = 0.3, mech = "MCAR")$amp
usethis::use_data(data.example)
usethis::use_data(data.example, overwrite = TRUE)
devtools::load_all()
devtools::document()
data("data.example")
devtools::load_all()
devtools::document()
devtools::build(binary=FALSE)
devtools::load_all()
devtools::document()
devtools::build(binary=FALSE)
devtools::load_all()
devtools::document()
devtools::build(binary=FALSE)
devtools::load_all()
devtools::document()
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
devtools::build(binary=FALSE)
remove.packages("biokNN", lib="~/R/win-library/3.6")
install.packages(biokNN)
install.packages("biokNN")
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
library(devtools)
devtools::load_all()
devtools::document()
devtools::install()
library(roxygen2); # Read in the roxygen2 R package
roxygenise();
library(biokNN)
devtools::build(
pkg = "biokNN_0.1.1",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
devtools::build(
pkg = "biokNN_0.1.1",
path = "C:/Users/au629204/OneDrive - Aarhus universitet/Research papers/Imputation",
binary = FALSE,
vignettes = FALSE,
manual = TRUE
)
build_manual(path=getwd())
devtools::load_all()
devtools::document()
devtools::install()
build_manual(path=getwd())
devtools::build(binary=FALSE)
devtools::document()
devtools::load_all()
devtools::install()
devtools::load_all()
devtools::document()
devtools::install()
roxygenise();
library(mice)
df_obs <- create_multilevel()
patt0 <- mice::ampute(df_obs, prop = 0.3, mech = "MCAR")$patterns
patt1 <- patt0[-1,]
data_example <- mice::ampute(df_obs, patterns = patt1, prop = 0.3, mech = "MCAR")$amp
usethis::use_data(data_example, overwrite = TRUE)
devtools::load_all()
devtools::document()
devtools::install()
build_manual(path=getwd())
library(roxygen2); # Read in the roxygen2 R package
devtools::load_all()
devtools::document()
devtools::install()
